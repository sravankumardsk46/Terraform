TAINT:
##########################################################
main.if
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = "nginx"
}

# Create a container
resource "docker_container" "mycontainer" {
  image = docker_image.myimg.latest
  name  = "testng"

 ports {
   internal = "80"
   external = "80"
   }
}
#################################################################
terraform validate
terraform plan
terraform apply --auto-approve
##its created two resource but i need re create same nginx to httpd 
###################################################################
main.if
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = "httpd"
}

# Create a container
resource "docker_container" "mycontainer" {  
  image = docker_image.myimg.latest
  name  = "testng"

 ports {
   internal = "80"
   external = "80"
   }
}
#####################################################################################
terraform plan

### it shows nginx > httpd
@#@# go to tacke aws pub ip copy to past on google it show u {nginx} web server
TERRAFORM taint <PROVIDER_RESOURCE.RESOURCE NAME>
# i taken here to copy taint details

terraform taint docker_container.mycontainer
####################################################
[root@ip-172-31-1-162 doc]# terraform taint docker_container.mycontainer
Resource instance docker_container.mycontainer has been marked as tainted.
#####################################################

terraform plan
terraform apply -auto-approve

## here old container destroy to ceate ne container becose of taint markeed in {plan}
terraform destroy 
############################################################################################
######################### AWS ACCESKEY AND SECRETEKEY ########################################################
# goto IAM sectio to careate acces and secter key to craete 
# then go to terraform 
vi ~/. bashrc

export AWS_ACCESS_KEY_ID= (your_access_key_id)
export AWS_SECRET_ACCESS_KEY=(your_secret_access_key)
#########################################################################





