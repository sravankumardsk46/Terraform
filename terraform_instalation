https://releases.hashicorp.com/terraform/0.13.1/terraform_0.13.1_linux_amd64.zip

curl -o https://releases.hashicorp.com/terraform/0.13.1/terraform_0.13.1_linux_amd64.zip

apt install -y unzip

unzip terraform_0.13.1_linux_amd64.zip -d /usr/local/bin

terraform version



################chtgpt############  linux ####

curl -o terraform_0.13.1_linux_amd64.zip https://releases.hashicorp.com/terraform/0.13.1/terraform_0.13.1_linux_amd64.zip
sudo yum install -y unzip
sudo unzip terraform_0.13.1_linux_amd64.zip -d /usr/local/bin
terraform version
which terraform

############Docker install in linux ##########
sudo yum install -y docker
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker
##################################################
## every infra need saparete folder#########33
mkdir terraform
mkdir doc
#########################################################
main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "ubuntu" {
  name = "ubuntu:latest"
}
~ 

terraform 0.13upgrade .
terraform init
main.tf  versions.tf 
terraform validate
terraform plan
 + this indicate create resource
 - this indicate resource deletion
+/- indicate resource recreation
terraform apply --auto-approve
terraform show
terraform destroy
terraform destroy
terraform destroy

##again want just
terraform plan 
terraform apply --auto-approve
##################modifide
vi main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "ubuntu" {
  name = "ubuntu:7"
}
terraform validate
terraform plan       ~ name   = "ubuntu:latest" -> "ubuntu:7"

terraform apply --auto-approve

~ 




####################################################
again terraform init not work up to date
#################init test ###################

[root@ip-172-31-82-49 doc]# ls .terraform/
plugins
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/
registry.terraform.io  selections.json
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/registry.terraform.io/
terraform-providers
[root@ip-172-31-82-49 doc]# .terraform/plugins/registry.terraform.io/terraform-providers/
bash: .terraform/plugins/registry.terraform.io/terraform-providers/: Is a directory
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/registry.terraform.io/terraform-providers/
docker
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/registry.terraform.io/terraform-providers/docker/
2.7.2
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/registry.terraform.io/terraform-providers/docker/2.7.2/
linux_amd64
[root@ip-172-31-82-49 doc]# ls .terraform/plugins/registry.terraform.io/terraform-providers/docker/2.7.2/linux_amd64/

################modifine nginx##################
main.if
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = "nginx"
}

# Create a container
resource "docker_container" "mycontainer" {
  image = docker_image.myimg.latest
  name  = "foo"

 ports {
   internal = "80"
   external = "80"
   }
}
##############################################################~  
terraform validate 
terraform plan
terraform apply --auto-approve
terraform show 
terraform destroy

terraform-provider-docker_v2.7.2_x4

###################################################
