# terraform read every thing in.tf
vi main.tf    
provider "docker" {
  host = "unix:///var/run/docker.sock"
}
variable "image_name" {
default = "nginx:latest"
}

variable "container_name" {
default = "noname"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = var.image_name
}

# Create a container
resource "docker_container" "mycontainer" {
  name = var.container_name
  image  = docker_image.myimg.latest

 ports {
   internal = "80"
   external = "80"
   }
}
#############################################################
cp main.tf variable.tf     # modifi file 
vi main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = var.image_name
}

# Create a container
resource "docker_container" "mycontainer" {
  name = var.container_name
  image  = docker_image.myimg.latest

 ports {
   internal = "80"
   external = "80"
   }
}
####################################################################
vi variable.tf
variable "image_name" {
default = "nginx:latest"
}

variable "container_name" {
default = "noname"
}
########################################################
terraform validate ,plan
############### LIST #################################
vi variable.tf
variable "image_name" {
  type = list
  default = ["httpd:latest", "nginx:latest"]
}

variable "container_name" {
default = "noname"
}
####################################################
vi main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = var.image_name[0]
}

# Create a container
resource "docker_container" "mycontainer" {
  name = var.container_name
  image  = docker_image.myimg.latest

 ports {
   internal = "80"
   external = "80"
   }
}
############################################################
terraform validate ,plan
vi variable.tf
variable "image_name" {
  type = list
  default = ["httpd:latest", "nginx:latest"]
}

variable "container_name" {
default = "noname"
}
variable "index" {
default = "0"
}
###############
vi main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = var.image_name[var.index]
}

# Create a container
resource "docker_container" "mycontainer" {
  name = var.container_name
  image  = docker_image.myimg.latest

 ports {
   internal = "80"
   external = "80"
   }
}
##############################

terraform plan -var "index"=1
terraform plan -var "index"=0
###############################################################
#################### MAP ######################################
vi variable.tf
variable "image_name" {
  type = map
  default = {
  "test" ="httpd:latest" 
  "prod" ="nginx:latest"
}

variable "container_name" {
default = "noname"
}
#################################################################
vi main.tf
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "myimg" {
  name = var.image_name["test"]
}

# Create a container
resource "docker_container" "mycontainer" {
  name = var.container_name
  image  = docker_image.myimg.latest

 ports {
   internal = "80"
   external = "80"
   }
}
#######################################
vi variable.tf
variable "image_name" {
  type    = map
  default = {
  "test" = "httpd:latest"
  "prod" = "nginx:latest"
}
}

variable "container_name" {
default = "noname"
}
###############################################
terraform validate , plan
test  ,  prod
terraform plan 
############terraform output  user define variable ############
vi main.tf  vi variable.tf  # take any default from docker
vi output.tf
output "container_name" {
  value = docker_container.example.name
}

output "container_ip" {
  value = docker_container.example.ip_address
}
############################################################




